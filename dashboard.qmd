---
title: "Sudanese & Diaspora Owned Businesses and Projects Dashboard"
format: 
  dashboard:
    logo: "img/g.gif"
    orientation: columns
---


```{r loadpackagesdata, echo=FALSE, include=FALSE}
library(tidyverse)
library(readxl)
library(googlesheets4)
library(janitor)
library(glue)
library(tidygeocoder)
library(leaflet)
library(gt)
source("geocodedaddresses.R")

 
response_ojs <- responses

# responses %>% names
```

## Column {width=85%}
### Row {height="70%"}

```{r leafletmap}
 
# Initialize leaflet map
leaflet(data = responses) %>%
  addTiles() %>%  # Adds default OpenStreetMap tiles
  addCircleMarkers(
    ~longitude, ~latitude,
    radius = 5,        # Size of the marker
    color = 'blue',    # Marker color
    stroke = TRUE,     # Border around the circle
    fillOpacity = 0.8, # Opacity of the fill color
    label = ~inputgeocodeaddress,  # Labels with address
    popup = ~inputgeocodeaddress   # Popup with address
  )







# Create gt table for full dataset
responses %>%
  select(
    response_id, timestamp, email_address, business_or_project,
    name_of_business_project, business_project_website,
    short_business_project_description, category_of_business_or_project,
    city_location_of_business_project, country_of_business_project
  ) %>%
  gt() %>%
  tab_header(title = "Sudanese & Diaspora Owned Businesses and Projects") %>%
  fmt_missing(columns = everything(), missing_text = "NA") -> responses_gt# Create gt table for full dataset
responses %>%
  select(
    response_id, timestamp, email_address, business_or_project,
    name_of_business_project, business_project_website,
    short_business_project_description, category_of_business_or_project,
    city_location_of_business_project, country_of_business_project
  ) %>%
  gt() %>%
  tab_header(title = "Sudanese & Diaspora Owned Businesses and Projects") %>%
  fmt_missing(columns = everything(), missing_text = "NA") -> responses_gt

```

```{r defineinputresponses,include=FALSE, echo=FALSE, panel="input"}


# Observable Inputs bind
ojs_define(responses = responses)


```



### Row {height="30%"}



```{ojs}
//| expandable: false

// Transpose the data for easier mapping
top_bus = transpose(responses);

// Dropdown menu for business or project
viewof countryDropdown = Inputs.select(
  Array.from(new Set(top_bus.map(d => d.country_of_business_project))),
  { label: "Country", unique: true }
);



// Dropdown menu for business or project
viewof projectDropdown = Inputs.select(
  Array.from(new Set(top_bus.map(d => d.business_or_project))),
  { label: "Business or Project", unique: true }
);


// Dropdown menu for category of business or project
viewof categoryDropdown = Inputs.select(
  Array.from(new Set(top_bus.map(d => d.category_of_business_or_project))),
  { label: "Category", unique: true }
);


// Dropdown for business name, filtered by selected project
viewof businessDropdown = Inputs.select(
  top_bus.filter(d => d.business_or_project === projectDropdown)
    .map(d => d.name_of_business_project),
  { label: "Name Business or Project", unique: true }
);



```

## Column {width=25%}
:::{.card expandable="false"}

<div style="background-color: #0d807a; color: white; border-radius: 10px; padding: 10px; text-align: center; display: flex; align-items: center; justify-content: center; height: 100%;"> <span style="font-size: 1vw; width: 100%;"> **Did you notice a missing Sudanese-owned business or project?** Add the business or project using this form <a href="`r glue::glue('{surveyform}')`" style="color: white; text-decoration: underline;">here</a>! <br><br>We update submissions to this dashboard within a day or two. <br>For questions or edits, reach us at: <a href="mailto:admin@geotruth.org" style="color: white;">admin@geotruth.org</a> </span> </div> 
::: 

